name: XIP CLI

on:
  push:
    branches: [master]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: ^1.14
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          cd pkg
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Create output directory
        run: |
          mkdir output

      - name: Build all versions
        run: |
          cd pkg
          GOOS=linux GOARCH=amd64 go build -trimpath -i -o ../output/x-ip_linux_amd64 .
          GOOS=windows GOARCH=amd64 go build -trimpath -i -o ../output/x-ip_windows_amd64.exe .
          GOOS=darwin GOARCH=amd64 go build -trimpath -i -o ../output/x-ip_macos_amd64 .
          GOOS=darwin GOARCH=arm64 go build -trimpath -i -o ../output/x-ip_macos_arm64 .

      - name: Upload build artifact Linux AMD64
        uses: actions/upload-artifact@v2
        with:
          name: x-ip_linux_amd64
          path: output/x-ip_linux_amd64

      - name: Upload build artifact Windows AMD64
        uses: actions/upload-artifact@v2
        with:
          name: x-ip_windows_amd64.exe
          path: output/x-ip_windows_amd64.exe

      - name: Upload build artifact macOS AMD64
        uses: actions/upload-artifact@v2
        with:
          name: x-ip_macos_amd64
          path: output/x-ip_macos_amd64

      - name: Upload build artifact macOS ARM64
        uses: actions/upload-artifact@v2
        with:
          name: x-ip_macos_arm64
          path: output/x-ip_macos_arm64
